/* package codechef; // don't place package name! */
import java.util.*;
import java.lang.*;
import java.io.*;
//https://leetcode.com/problems/matrix-block-sum/
/* Name of the class has to be "Main" only if the class is public. */
public class Main
{
    public static void main (String[] args) throws java.lang.Exception
    {
		InputStreamReader inputStreamReader = new InputStreamReader(System.in);
		BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
		String firstLineInput[] = bufferedReader.readLine().trim().split(" ");
		int row = Integer.parseInt(firstLineInput[0]);
		int col = Integer.parseInt(firstLineInput[1]);
		int k = Integer.parseInt(firstLineInput[2]);
		int mat[][] = new int[row][col];
		int currentRow = 0;
		while (currentRow < row) {
			String currentRowInput[] = bufferedReader.readLine().trim().split(" ");
			initMatrix(mat, currentRow, currentRowInput);
			currentRow++;
		}
		addRowCol(mat);
		processQueryK(k,mat);
		inputStreamReader.close();
		bufferedReader.close();

	}

	private static void processQueryK(int k,int mat[][]) {
		for(int  i =0 ;i<mat.length;i++)
		{
			for(int j = 0 ;j<mat[i].length;j++)
			{
				int sum = getSumforCurrentCell(i,j,k,mat);
				System.out.print(sum+" ");
			}
			System.out.println();
		}
		
	}

	private static int getSumforCurrentCell(int i, int j, int k, int[][] mat) {
		int x1 = i-k<0?0:i-k;
		int x2 = i+k>mat.length-1?mat.length-1:i+k;
		int y1 = j-k<0?0:j-k;
		int y2 = j+k>mat[x2].length-1?mat[x2].length-1:j+k;
		int sum = mat[x2][y2];
		if(x1-1>=0)
		{
			sum = sum - mat[x1-1][y2];
		}
		if(y1-1>=0)
		{
			sum = sum - mat[x2][y1-1];
		}
		if(x1-1>=0 && y1-1>=0)
		{
			sum = sum + mat[x1-1][y1-1];
		}
		return sum;
	}

	private static void initMatrix(int[][] mat, int currentRow, String[] currentRowInput) {
		for (int col = 0; col < mat[currentRow].length; col++) {
			mat[currentRow][col] = Integer.parseInt(currentRowInput[col]);
		}

	}

	private static void addRowCol(int[][] mat) {
		for (int i = 1; i < mat.length; i++) {
			for (int j = 0; j < mat[i].length; j++) {
				mat[i][j] = mat[i][j] + mat[i - 1][j];
			}
		}
		for (int i = 0; i < mat.length; i++) {
			for (int j = 1; j < mat[i].length; j++) {
				mat[i][j] = mat[i][j] + mat[i][j - 1];
			}
		}

	}

}
