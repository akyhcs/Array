/* package codechef; // don't place package name! */
import java.util.*;
import java.lang.*;
import java.io.*;
///https://leetcode.com/problems/permutation-in-string/
/* Name of the class has to be "Main" only if the class is public. */
public class Main
{
    public static void main (String[] args) throws java.lang.Exception
    {
	InputStreamReader inputStreamReader = new InputStreamReader(System.in);
		BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
		int totalQuery =Integer.parseInt(bufferedReader.readLine());
		while(totalQuery>0)
		{
			String stringOne = bufferedReader.readLine().trim();
			String stringTwo = bufferedReader.readLine().trim();
			//System.out.println(stringOne+"---"+stringTwo);
			boolean isStringOnePremuInStringTwo = checkStringOnePremuStringTwo(stringOne,stringTwo);
			if(isStringOnePremuInStringTwo)
			{
				System.out.println("True");
			}
			else
			{
				System.out.println("False");
			}
			//System.out.println(isStringOnePremuInStringTwo);
			totalQuery--;
		}
	}

	private static boolean checkStringOnePremuStringTwo(String stringOne, String stringTwo) {
		if(stringOne.length() > stringTwo.length())
		{
			//if stringOne is bigger than stringTwo then we will not be able to find permutation of s1 in string two
			return false;
		}
		
		//create frequency array for s1
		int freStringOne[] = new int[26];
		int freStringTwo[] = new int[26];
		for(int i =0 ;i<stringOne.length();i++)
		{
			freStringOne[getIndex(stringOne.charAt(i))]++;
		}
		int j,k;
		j=k=0;
		while(k<stringTwo.length())
		{
			freStringTwo[getIndex(stringTwo.charAt(k))]++;
			
			if(k-j+1==stringOne.length())
			{
				if(checkFreArr(freStringOne,freStringTwo,stringOne))
				{
					return true;
				}
			}
			
			if(k-j+1<stringOne.length())
			{
				k++;
			}
			else
			{
				freStringTwo[getIndex(stringTwo.charAt(j))]--;
				j++;
				k++;
			}
		}
		return false;
	}

	private static int getIndex(char charAt) {
		int index = (int)charAt - (int)'a';
		return index;
	}

	private static boolean checkFreArr(int[] freStringOne, int[] freStringTwo,String stringOne) {
		for(int i = 0 ;i<stringOne.length();i++)
		{
			if(freStringOne[stringOne.charAt(i)-'a']!=freStringTwo[stringOne.charAt(i)-'a'])
			{
				return false;
			}
		}
		return true;
	}

}
