class Complete{
    
   //https://practice.geeksforgeeks.org/problems/minimum-swaps-required-to-bring-all-elements-less-than-or-equal-to-k-together4847/1?utm_source=geeksforgeeks&utm_medium=article_practice_tab&/utm_campaign=article_practice_tab
    // Function for finding maximum and value pair
    public static int minSwap (int arr[], int n, int j) {
        //Complete the function
        //int k = -1;
        //int c = 0;
        int minNumberOfSwap = Integer.MAX_VALUE;
        int countOfSwapinCurrentWindow = 0;
        int sizeOFWindow = 0;//countOfElementLessThanJ 
        
        
        for(int  i = 0 ;i<n;i++)
        {
            if(arr[i]<=j)
                sizeOFWindow = sizeOFWindow+1;
        }
        //System.out.println(sizeOFWindow);
        for(int i = 0 ;i<sizeOFWindow;i++)
        {
            if(arr[i]>j)
            {
                countOfSwapinCurrentWindow = countOfSwapinCurrentWindow+1;
            }
        }
        if(minNumberOfSwap > countOfSwapinCurrentWindow)
        {
            minNumberOfSwap = countOfSwapinCurrentWindow;
        }
        for(int i = sizeOFWindow ;i<n;i++ )
        {
            if(arr[i] > j)
                countOfSwapinCurrentWindow = countOfSwapinCurrentWindow+1;
                
            if(arr[i-sizeOFWindow] > j)
            {
                countOfSwapinCurrentWindow = countOfSwapinCurrentWindow-1;
            }
            
             if(minNumberOfSwap > countOfSwapinCurrentWindow)
            {
                 minNumberOfSwap = countOfSwapinCurrentWindow;
            }
        }
        
        return minNumberOfSwap;
    }
    
    
}
