//https://leetcode.com/problems/missing-number/description/
//
class Solution {
    public int missingNumber(int[] nums) {
       performCyclicSort(nums);
       return getMissingNumber(nums);
    }
    	 private static int getMissingNumber(int[] arr) {
		for(int i = 0;i<arr.length;i++)
		{
			if(i!=arr[i])
			{
				return i;
			}
		}
		return arr.length;//if all num are present, because it contains num from 0-n and if 0ton-1 //is already present then only n can be missing 
	}


	private static int[] performCyclicSort(int[] arr) {
		int i = 0;
		while(i<arr.length)
		{
			int currentIndexOfCurrentValue = arr[i];
			if(currentIndexOfCurrentValue<arr.length && i!=currentIndexOfCurrentValue)
			{
				int j = currentIndexOfCurrentValue;
				swap(i,j,arr);
			}
			else
			{
				i++;
			}
		}
		return arr;
	}

	private static void swap(int i, int j, int[] arr) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}
}
